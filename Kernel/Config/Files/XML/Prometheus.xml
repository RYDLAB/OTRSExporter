<?xml version="1.0" encoding="utf-8"?>
<otrs_config version="2.0" init="Changes">

    <-- Web Service operation -->

    <Setting Name="GenericInterface::Operation::Module###Prometheus::MetricGet" Required="0" Valid="1">
        <Description Translatable="1">GenericInterface module registration for the operation layer.</Description>
        <Navigation>GenericInterface::Operation::ModuleRegistration</Navigation>
        <Value>
            <Hash>
                <Item Key="Name">MetricGet</Item>
                <Item Key="Controller">Prometheus</Item>
                <Item Key="ConfigDialog">AdminGenericInterfaceOperationDefault</Item>
            </Hash>
        </Value>
    </Setting>

    <-- Settings -->

    <Setting Name="Prometheus::Settings" Required="1" Valid="1">
        <Description Translatable="1"></Description>
        <Value>
            <Hash>
                <Item ValueType="String" Key="SharedMemoryKey">1999</Item>
                <Item ValueType="String" Key="ServerCMND">/usr/sbin/apache2 -k start</Item>
                <Item ValueType="Select" Key="Guard" SelectedID="Cache">
                    <Item ValueType="Option" Value="Cache" Translatable="1">Cache</Item>
                    <Item ValueType="Option" Value="SHM" Translatable="1">Shared memory</Item>
                </Item>
            </Hash>
        </Value>
    </Setting>

    <-- Default metrics -->

    <Setting Name="Prometheus::Metrics::Default::Enabled" Required="1" Valid="1">
        <Description Translatable="1">Default metrics to collect</Description>
        <Value>
            <Hash>
                <Item Key="HTTPRequestDurationSeconds" ValueType="Checkbox">1</Item>
                <Item Key="HTTPResponseSizeBytes" ValueType="Checkbox">1</Item>
                <Item Key="HTTPRequestsTotal" ValueType="Checkbox">1</Item>

                <Item Key="OTRSIncomeMailTotal" ValueType="Checkbox">1</Item>
                <Item Key="OTRSOutgoingMailTotal" ValueType="Checkbox">1</Item>
                <Item Key="OTRSTicketTotal" ValueType="Checkbox">1</Item>
                <Item Key="OTRSArticleTotal" ValueType="Checkbox">1</Item>
                <Item Key="OTRSLogsTotal" ValueType="Checkbox">1</Item>

                <Item Key="CacheOperations" ValueType="Checkbox">1</Item>
                <Item Key="RecurrentTasksMetrics" ValueType="Checkbox">1</Item>
                <Item Key="HTTPProcessCollector" ValueType="Checkbox">1</Item>
                <Item Key="DaemonProcessCollector" ValueType="Checkbox">1</Item>
                <Item Key="DaemonSubworkersMetrics" ValueType="Checkbox">1</Item>
            </Hash>
        </Value>
    </Setting>

    <-- Prometheus front-end module -->

    <Setting Name="Frontend::Module###AdminPrometheus" Required="0" Valid="1">
        <Description Translatable="1">Frontend module registration for the agent interface.</Description>
        <Navigation>Frontend::Admin::ModuleRegistration</Navigation>
        <Value>
            <Item ValueType="FrontendRegistration">
                <Hash>
                    <Item Key="GroupRo">
                        <Array>
                        </Array>
                    </Item>
                    <Item Key="Group">
                        <Array>
                            <Item>admin</Item>
                        </Array>
                    </Item>
                    <Item Key="Description">Admin</Item>
                    <Item Key="Title" Translatable="1">Custom metrics</Item>
                    <Item Key="NavBarName">Admin</Item>
                </Hash>
            </Item>
        </Value>
    </Setting>

    <Setting Name="Loader::Module::AdminPrometheus###001-Framework" Required="0" Valid="1">
        <Description Translatable="1">Loader module registration for the agent interface.</Description>
        <Navigation>Frontend::Admin::ModuleRegistration::Loader</Navigation>
        <Value>
            <Hash>
                <Item Key="JavaScript">
                    <Array>
                        <Item>Core.Agent.Admin.Prometheus.js</Item>
                    </Array>
                </Item>
            </Hash>
        </Value>
    </Setting>

    <Setting Name="Frontend::NavigationModule###AdminPrometheus" Required="0" Valid="1">
        <Description Translatable="1">Admin area navigation for the agent interface.</Description>
        <Navigation>Frontend::Admin::ModuleRegistration::AdminOverview</Navigation>
        <Value>
            <Hash>
                <Item Key="Group">
                    <Array>
                        <Item>admin</Item>
                    </Array>
                </Item>
                <Item Key="GroupRo">
                    <Array>
                    </Array>
                </Item>
                <Item Key="Module">Kernel::Output::HTML::NavBar::ModuleAdmin</Item>
                <Item Key="Name" Translatable="1">Custom metrics</Item>
                <Item Key="Block">Administration</Item>
                <Item Key="Description" Translatable="1">Manage prometheuses custom metrics</Item>
            </Hash>
        </Value>
    </Setting>

    <-- Custom metrics creating and configuration interface -->

    <Setting Name="Prometheus::Metrics::Custom::IsEnabled" Required="1" Valid="1">
        <Description Translatable="1">Is custom metrics enabled?</Description>
        <Value>
            <Item ValueType="Checkbox">1</Item>
        </Value>
    </Setting>

    <-- Cron Tasks -->

    <Setting Name="Daemon::SchedulerCronTaskManager::Task###PrometheusUpdateMetrics" Required="0" Valid="1" ConfigLevel="100">
        <Description Translatable="1">Update metrics from database and /proc/</Description>
        <Navigation>Daemon::SchedulerCronTaskManager::Task</Navigation>
        <Value>
            <Hash>
                <Item Key="TaskName">PrometheusUpdateMetrics</Item>
                <Item Key="Schedule">* * * * *</Item><!-- each minute -->
                <Item Key="Module">Kernel::System::Prometheus</Item>
                <Item Key="Function">UpdateDefaultMetrics</Item>
                <Item Key="MaximumParallelInstances">1</Item>
                <Item Key="Params">
                    <Array>
                    </Array>
                </Item>
            </Hash>
        </Value>
    </Setting>

    <Setting Name="Daemon::SchedulerCronTaskManager::Task###PrometheusUpdateCustomSQLMetrics" Required="0" Valid="1" ConfigLevel="100">
        <Description Translatable="1">Update custom metrics from database</Description>
        <Navigation>Daemon::SchedulerCronTaskManager::Task</Navigation>
        <Value>
            <Hash>
                <Item Key="TaskName">PrometheusUpdateCustomSQLMetrics</Item>
                <Item Key="Schedule">* * * * *</Item><!--each minute -->
                <Item Key="Module">Kernel::System::Prometheus</Item>
                <Item Key="Function">UpdateCustomSQLMetrics</Item>
                <Item Key="MaximumParallelInstances">1</Item>
                <Item Key="Params">
                    <Array>
                    </Array>
                </Item>
            </Hash>
        </Value>
    </Setting>

    <Setting Name="Daemon::SchedulerCronTaskManager::Task###PrometheusClearDiedProcessCollectors" Required="0" Valid="1" ConfigLevel="100">
        <Description Translatable="1">
            Delete process collectors for died processes. For example:
            We collecting information(memory, cpu seconds ...) about process with pid 1234
            But once process 1234 was died, so we do not have to have information about this
            collector in shared memory. This method delete all collectors for died processes
        </Description>
        <Navigation>Daemon::SchedulerCronTaskManager::Task</Navigation>
        <Value>
            <Hash>
                <Item Key="TaskName">PrometheusClearDiedProcessCollectors</Item>
                <Item Key="Schedule">* * * * *</Item><!--each minute -->
                <Item Key="Module">Kernel::System::Prometheus</Item>
                <Item Key="Function">ClearDiedProcessCollectors</Item>
                <Item Key="MaximumParallelInstances">1</Item>
                <Item Key="Params">
                    <Array>
                    </Array>
                </Item>
            </Hash>
        </Value>
    </Setting>

    <Setting Name="Daemon::SchedulerCronTaskManager::Task###PrometheusClearValuesWithDiedPids" Required="0" Valid="1" ConfigLevel="100">
        <Description Translatable="1">
            Delete values with died workers as label. For example:
                http_requests_total{host="...", worker="1234"} ...
            Process with pid 1234 already doesn't exists, so we delete this metric value
        </Description>
        <Navigation>Daemon::SchedulerCronTaskManager::Task</Navigation>
        <Value>
            <Hash>
                <Item Key="TaskName">PrometheusClearValuesWithDiedPids</Item>
                <Item Key="Schedule">0 * * * *</Item><!--each minute -->
                <Item Key="Module">Kernel::System::Prometheus</Item>
                <Item Key="Function">ClearValuesWithDiedPids</Item>
                <Item Key="MaximumParallelInstances">1</Item>
                <Item Key="Params">
                    <Array>
                    </Array>
                </Item>
            </Hash>
        </Value>
    </Setting>

</otrs_config>
